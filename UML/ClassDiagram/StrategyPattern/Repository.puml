@startuml
class RepositoryContext {
    + setRepository(repository : Repository)
}

interface Repository<T, ID>{
     + findById(id : ID) : Optional<T>
     + findAll() : Iterable<T>
     + save(entity : T) : T
     + deleteById(id : ID) : void
     + deleteAll() : void
}

class ExpenseRepository {
    - hikariDataSource : HikariDataSource
    + ExpenseRepository(hikariDataSource : HikariDataSource)
    + findById(id : Long) : Optional<Expense>
    + findAll() : Iterable<Expense>
    + save(entity : Expense) : Expense
    + deleteById(id : Long) : void
    + deleteAll() : void
}

class UserRepository {
    - hikariDataSource : HikariDataSource
    + UserRepository(hikariDataSource : HikariDataSource)
    + findById(id : Long) : Optional<User>
    + findAll() : Iterable<User>
    + save(entity : User) : User
    + deleteById(id : Long) : void
    + deleteAll() : void
}

RepositoryContext o-> Repository
Repository <|-- UserRepository
Repository <|-- ExpenseRepository

@enduml